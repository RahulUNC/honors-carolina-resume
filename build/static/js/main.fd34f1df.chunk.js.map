{"version":3,"sources":["components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Main","React","useState","auth","setAuth","openModal","setOpenModal","loginClose","AppBar","Toolbar","IconButton","size","edge","color","sx","mr","Home","Typography","variant","component","flexGrow","Button","onClick","Modal","open","onClose","Box","position","top","left","transform","width","bgcolor","border","boxShadow","p","m","id","TextField","label","type","axios","get","then","res","console","log","data","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAKe,SAASA,IACpB,MAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCH,IAAMC,UAAS,GAAjD,mBAAOG,EAAP,KAAkBC,EAAlB,KAGMC,EAAa,kBAAMD,GAAa,IAgCtC,OACI,8BACI,mCACI,cAACE,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,KAAK,QAAQC,MAAM,UAAU,aAAW,OAAOC,GAAI,CAAEC,GAAI,GAAlF,SAAuF,cAACC,EAAA,EAAD,MACvF,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,MAAML,GAAI,CAAEM,SAAW,GAA1D,wCAGA,cAACC,EAAA,EAAD,CAAQC,QAAUnB,EAtCvB,WACXC,GAAQ,IALM,kBAAOE,GAAa,IA0C0BO,MAAO,UAAnD,SAA8DV,EAAM,SAAW,eAGxF,2CACC,cAACoB,EAAA,EAAD,CAAOC,KAAMnB,EAAWoB,QAASlB,EAAjC,SACI,eAACmB,EAAA,EAAD,CAAKZ,GA3BP,CACVa,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,IACPC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,EACH,kBAAmB,CAAEC,EAAG,EAAGL,MAAO,SAiBNZ,UAAU,OAA1B,UACI,cAACF,EAAA,EAAD,CAAYoB,GAAG,oBAAoBnB,QAAQ,KAAKC,UAAU,KAA1D,mBAGA,cAACmB,EAAA,EAAD,CAAWD,GAAG,OAAOE,MAAM,WAAWrB,QAAQ,aAC9C,cAACoB,EAAA,EAAD,CAAWD,GAAG,OAAOE,MAAM,WAAWrB,QAAQ,WAAWsB,KAAK,aAC1D,cAACnB,EAAA,EAAD,CAAQC,QAvCZ,WAChBf,IAZiBH,GAAQ,GAMzBqC,IAAMC,IAAI,0EAA0EC,MAAK,SAAAC,GACrFC,QAAQC,IAAIF,EAAIG,UA2C8BlC,MAAQ,UAAtC,6B,oBClDbmC,MARf,WACE,OACE,cAAC,IAAD,UACE,cAAChD,EAAD,OCKSiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.fd34f1df.chunk.js","sourcesContent":["import { AppBar, Toolbar, TextField, Button, Typography, IconButton, Modal, Box} from \"@mui/material\"\nimport { Home } from  \"@mui/icons-material\"\nimport React from \"react\";\nimport axios from \"axios\";\n\nexport default function Main() {\n    const [auth, setAuth] = React.useState(false);\n    const [openModal, setOpenModal] = React.useState(false);\n\n    const loginOpen = () =>  setOpenModal(true);\n    const loginClose = () => setOpenModal(false);\n\n    const logIn = () => {setAuth(true)};\n    const logOut = () => {\n        setAuth(false);\n    };\n\n    const getData = () => {\n        axios.get(\"http://node-mongodb-sample-git-rnarveka.apps.cloudapps.unc.edu/resumes\").then(res => {\n            console.log(res.data)\n        })\n    }\n\n    const modalSubmit = () => { \n        loginClose(); \n        logIn();\n        getData();\n    }\n\n    const style = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n        '& > :not(style)': { m: 1, width: '25ch' }\n    };\n\n    return (\n        <div>\n            <header>\n                <AppBar>\n                    <Toolbar>\n                        <IconButton size=\"large\" edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }}><Home/></IconButton>\n                        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow : 1}}>\n                            Honors Carolina Resume App\n                        </Typography>\n                        <Button onClick={!auth? loginOpen : logOut} color= \"inherit\">{auth? \"Logout\" : \"Login\"}</Button>\n                    </Toolbar>\n                </AppBar>\n               <h1>Logged In</h1>\n                <Modal open={openModal} onClose={loginClose}>\n                    <Box sx={style} component=\"form\">\n                        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                            Login\n                        </Typography>\n                        <TextField id=\"user\" label=\"Username\" variant=\"outlined\" />\n                        <TextField id=\"pass\" label=\"Password\" variant=\"outlined\" type=\"password\"/>\n                            <Button onClick={modalSubmit} color = \"inherit\">Login</Button>\n                    </Box>\n                </Modal>\n            </header>\n        </div>\n    )\n}","import Main from './components/Main';\nimport { Box } from '@mui/system';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Box>\n      <Main/>\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}